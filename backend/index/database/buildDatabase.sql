-- Create table SOURCE
CREATE TABLE SOURCE (
    ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    SOURCE_NAME VARCHAR2(255) UNIQUE NOT NULL,
    BASE_URL VARCHAR2(2048)
);

-- Create table DOCUMENT
CREATE TABLE DOCUMENT (
    ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    SOURCE_ID NUMBER NOT NULL,
    DOCUMENT_TYPE VARCHAR2(50) NOT NULL CHECK (DOCUMENT_TYPE IN ('paper', 'website')),
    SUMMARY CLOB NOT NULL,
    PUBLISH_DATE DATE,
    DOCUMENT_URL VARCHAR2(2048) NOT NULL,
    DOCUMENT_LENGTH NUMBER NOT NULL,
    DOCUMENT_LANGUAGE VARCHAR2(50) NOT NULL CHECK (DOCUMENT_LANGUAGE IN ('spanish', 'english')),
    CONSTRAINT FK_SOURCE FOREIGN KEY (SOURCE_ID) REFERENCES SOURCE (ID)
);

-- Create table TERM
CREATE TABLE TERM (
    TERM VARCHAR2(255) PRIMARY KEY,
    DOCUMENT_FREQUENCY NUMBER DEFAULT 0 NOT NULL,
    IDF NUMBER DEFAULT 0 NOT NULL
);

-- Create table APPEARS
CREATE TABLE APPEARS (
    DOCUMENT_ID NUMBER NOT NULL,
    TERM VARCHAR2(255) NOT NULL,
    TERM_FREQUENCY NUMBER NOT NULL,
    PRIMARY KEY (DOCUMENT_ID, TERM),
    CONSTRAINT FK_DOCUMENT FOREIGN KEY (DOCUMENT_ID) REFERENCES DOCUMENT (ID),
    CONSTRAINT FK_TERM FOREIGN KEY (TERM) REFERENCES TERM (TERM)
);

-- Create table DOCUMENT_STATISTICS
CREATE TABLE DOCUMENT_STATISTICS (
    TOTAL_DOCUMENTS NUMBER NOT NULL,
    AVERAGE_DOCUMENT_LENGTH NUMBER NOT NULL
);

-- Trigger to update document stats
CREATE OR REPLACE TRIGGER UPDATE_DOCUMENT_STATISTICS AFTER
    INSERT OR DELETE OR UPDATE ON DOCUMENT FOR EACH ROW
BEGIN
    DECLARE
        TOTAL_LENGTH NUMBER;
        DOC_COUNT    NUMBER;
        AVG_LENGTH   NUMBER;
    BEGIN
 
        -- Update total document count
        IF INSERTING OR DELETING THEN
            UPDATE DOCUMENT_STATISTICS
            SET
                TOTAL_DOCUMENTS = TOTAL_DOCUMENTS + (
                    CASE WHEN INSERTING THEN 1 ELSE -1 END
                );
        END IF;
 

        -- Re-compute average document length
        SELECT
            SUM(DOCUMENT_LENGTH),
            COUNT(*) INTO TOTAL_LENGTH,
            DOC_COUNT
        FROM
            DOCUMENT;
        AVG_LENGTH := TOTAL_LENGTH / DOC_COUNT;
 
        -- Update the average document length
        UPDATE DOCUMENT_STATISTICS
        SET
            AVERAGE_DOCUMENT_LENGTH = AVG_LENGTH;
    END;
END;
 

-- Trigger to update IDF of a term in TERM table
CREATE OR REPLACE TRIGGER UPDATE_TERM_IDF AFTER INSERT OR DELETE ON APPEARS FOR EACH ROW BEGIN DECLARE TOTAL_DOCS NUMBER;
TERM_DOCS NUMBER;
IDF_VALUE NUMBER;
BEGIN
    SELECT
        TOTAL_DOCUMENTS INTO TOTAL_DOCS
    FROM
        DOCUMENT_COUNT;
    SELECT
        COUNT(DISTINCT DOCUMENT_ID) INTO TERM_DOCS
    FROM
        APPEARS
    WHERE
        TERM = :NEW.TERM;
    IF TERM_DOCS > 0 THEN
        IDF_VALUE := LOG((TOTAL_DOCS - TERM_DOCS + 0.5) / (TERM_DOCS + 0.5) + 1.0);
    ELSE
        IDF_VALUE := 0;
    END IF;
    UPDATE TERM
    SET
        IDF = IDF_VALUE
    WHERE
        TERM = :NEW.TERM;
END;
END;